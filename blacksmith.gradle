import java.time.Instant

initscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath "com.google.cloud.tools:jib-gradle-plugin:3.4.4"
    }
}

def timestamp = Instant.now().getEpochSecond();

allprojects {
    apply plugin: com.google.cloud.tools.jib.gradle.JibPlugin

    pluginManager.withPlugin('com.google.cloud.tools.jib') {
        def imageNameProvider = project.provider {
            "${project.findProperty('com.contentgrid.docker.registry.name')}/${project.name}:${project.version}-${timestamp}"
        }
        jib {
            container {
                jvmFlags = ['-XX:+UseContainerSupport', '-XX:MaxRAMPercentage=85.0']
            }
            to {
                image = imageNameProvider
                auth {
                    username = project.findProperty('com.contentgrid.docker.registry.username')
                    password = project.findProperty('com.contentgrid.docker.registry.password')
                }
            }
            allowInsecureRegistries = Boolean.parseBoolean(project.findProperty("com.contentgrid.docker.registry.allow-insecure"))
        }
        project.tasks.named('jib').configure {
            doLast {
                def dockerImgFile = file('build/docker.image')
                println "writing ${jib.to.image} > ${dockerImgFile.absolutePath}"
                dockerImgFile.newWriter().withWriter { writer ->
                    writer.write jib.to.image
                }
            }
        }
    }
}